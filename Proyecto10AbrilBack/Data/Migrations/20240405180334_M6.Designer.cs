// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proyecto10AbrilBack.Data;

#nullable disable

namespace Proyecto10AbrilBack.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240405180334_M6")]
    partial class M6
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "7a300773-72f0-4b86-8ddf-733a70fbd6ed",
                            Name = "Administrador",
                            NormalizedName = "ADMINISTRADOR"
                        },
                        new
                        {
                            Id = "b0a6bfc7-7766-4d5f-ac0f-5c79e11e22b3",
                            Name = "Visitante",
                            NormalizedName = "VISITANTE"
                        },
                        new
                        {
                            Id = "ce9b3b57-f12e-429c-97e6-a0190c691d00",
                            Name = "Abonado",
                            NormalizedName = "ABONADO"
                        },
                        new
                        {
                            Id = "45820afa-7e13-4a78-9b99-993db9587d46",
                            Name = "Entrenador",
                            NormalizedName = "ENTRENADOR"
                        },
                        new
                        {
                            Id = "96d3b0bb-626a-479b-ab54-c0d64a785e45",
                            Name = "Jugador",
                            NormalizedName = "JUGADOR"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ProyectoCore10AbrilBack.Models.Abonado", b =>
                {
                    b.Property<int>("AbonadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AbonadoId"));

                    b.Property<string>("AbonadoApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbonadoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbonadoTelefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbonadoUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.HasKey("AbonadoId");

                    b.ToTable("Abonados");

                    b.HasData(
                        new
                        {
                            AbonadoId = 1,
                            AbonadoApellido = "Pérez",
                            AbonadoNombre = "Juan",
                            AbonadoTelefono = "123456789",
                            AbonadoUser = "JuanAbonado",
                            Precio = 100
                        },
                        new
                        {
                            AbonadoId = 2,
                            AbonadoApellido = "López",
                            AbonadoNombre = "María",
                            AbonadoTelefono = "987654321",
                            AbonadoUser = "MariaAbonado",
                            Precio = 150
                        },
                        new
                        {
                            AbonadoId = 3,
                            AbonadoApellido = "Gómez",
                            AbonadoNombre = "Carlos",
                            AbonadoTelefono = "555666777",
                            AbonadoUser = "CarlosAbonado",
                            Precio = 120
                        },
                        new
                        {
                            AbonadoId = 4,
                            AbonadoApellido = "Díaz",
                            AbonadoNombre = "Laura",
                            AbonadoTelefono = "111222333",
                            AbonadoUser = "LauraAbonado",
                            Precio = 130
                        },
                        new
                        {
                            AbonadoId = 5,
                            AbonadoApellido = "Sánchez",
                            AbonadoNombre = "David",
                            AbonadoTelefono = "999888777",
                            AbonadoUser = "DavidAbonado",
                            Precio = 110
                        },
                        new
                        {
                            AbonadoId = 6,
                            AbonadoApellido = "Fernández",
                            AbonadoNombre = "Elena",
                            AbonadoTelefono = "444555666",
                            AbonadoUser = "ElenaAbonado",
                            Precio = 140
                        },
                        new
                        {
                            AbonadoId = 7,
                            AbonadoApellido = "Rodríguez",
                            AbonadoNombre = "Miguel",
                            AbonadoTelefono = "777888999",
                            AbonadoUser = "MiguelAbonado",
                            Precio = 125
                        },
                        new
                        {
                            AbonadoId = 8,
                            AbonadoApellido = "Martínez",
                            AbonadoNombre = "Sara",
                            AbonadoTelefono = "666555444",
                            AbonadoUser = "SaraAbonado",
                            Precio = 145
                        },
                        new
                        {
                            AbonadoId = 9,
                            AbonadoApellido = "García",
                            AbonadoNombre = "Diego",
                            AbonadoTelefono = "333222111",
                            AbonadoUser = "DiegoAbonado",
                            Precio = 115
                        },
                        new
                        {
                            AbonadoId = 10,
                            AbonadoApellido = "López",
                            AbonadoNombre = "Carmen",
                            AbonadoTelefono = "888999111",
                            AbonadoUser = "CarmenAbonado",
                            Precio = 135
                        });
                });

            modelBuilder.Entity("ProyectoCore10AbrilBack.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaId"));

                    b.Property<int>("JugadorId")
                        .HasColumnType("int");

                    b.Property<int>("Niveles")
                        .HasColumnType("int");

                    b.HasKey("CategoriaId");

                    b.HasIndex("JugadorId");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            CategoriaId = 1,
                            JugadorId = 1,
                            Niveles = 0
                        },
                        new
                        {
                            CategoriaId = 2,
                            JugadorId = 2,
                            Niveles = 1
                        });
                });

            modelBuilder.Entity("ProyectoCore10AbrilBack.Models.CuerpoTecnico", b =>
                {
                    b.Property<int>("CuerpoTecnicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CuerpoTecnicoId"));

                    b.Property<string>("CuerpoTecnicoApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CuerpoTecnicoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CuerpoTecnicoSueldo")
                        .HasColumnType("int");

                    b.Property<int>("JugadorId")
                        .HasColumnType("int");

                    b.HasKey("CuerpoTecnicoId");

                    b.HasIndex("JugadorId");

                    b.ToTable("CuerpoTecnicos");

                    b.HasData(
                        new
                        {
                            CuerpoTecnicoId = 1,
                            CuerpoTecnicoApellido = "Ramírez",
                            CuerpoTecnicoNombre = "Pedro",
                            CuerpoTecnicoSueldo = 2500,
                            JugadorId = 1
                        },
                        new
                        {
                            CuerpoTecnicoId = 2,
                            CuerpoTecnicoApellido = "Fernández",
                            CuerpoTecnicoNombre = "Sofía",
                            CuerpoTecnicoSueldo = 2300,
                            JugadorId = 2
                        },
                        new
                        {
                            CuerpoTecnicoId = 3,
                            CuerpoTecnicoApellido = "Gómez",
                            CuerpoTecnicoNombre = "Pablo",
                            CuerpoTecnicoSueldo = 2700,
                            JugadorId = 3
                        },
                        new
                        {
                            CuerpoTecnicoId = 4,
                            CuerpoTecnicoApellido = "Martínez",
                            CuerpoTecnicoNombre = "Elena",
                            CuerpoTecnicoSueldo = 2800,
                            JugadorId = 4
                        },
                        new
                        {
                            CuerpoTecnicoId = 5,
                            CuerpoTecnicoApellido = "García",
                            CuerpoTecnicoNombre = "Alejandro",
                            CuerpoTecnicoSueldo = 2900,
                            JugadorId = 5
                        },
                        new
                        {
                            CuerpoTecnicoId = 6,
                            CuerpoTecnicoApellido = "Díaz",
                            CuerpoTecnicoNombre = "Cristina",
                            CuerpoTecnicoSueldo = 3000,
                            JugadorId = 6
                        },
                        new
                        {
                            CuerpoTecnicoId = 7,
                            CuerpoTecnicoApellido = "Pérez",
                            CuerpoTecnicoNombre = "David",
                            CuerpoTecnicoSueldo = 3100,
                            JugadorId = 7
                        });
                });

            modelBuilder.Entity("ProyectoCore10AbrilBack.Models.Gasto", b =>
                {
                    b.Property<int>("GastoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GastoId"));

                    b.Property<int>("AbonadoId")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("CuerpoTecnicoId")
                        .HasColumnType("int");

                    b.Property<string>("GastoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("GastoId");

                    b.HasIndex("AbonadoId");

                    b.HasIndex("CuerpoTecnicoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("Gastos");

                    b.HasData(
                        new
                        {
                            GastoId = 1,
                            AbonadoId = 1,
                            Cantidad = 2000,
                            GastoNombre = "📉Material deportivo"
                        },
                        new
                        {
                            GastoId = 2,
                            AbonadoId = 2,
                            Cantidad = 20000,
                            GastoNombre = "📉Pago de árbitros"
                        },
                        new
                        {
                            GastoId = 3,
                            AbonadoId = 3,
                            Cantidad = 500,
                            GastoNombre = "📉Alquiler del campo de entrenamiento"
                        },
                        new
                        {
                            GastoId = 4,
                            AbonadoId = 4,
                            Cantidad = 1500,
                            GastoNombre = "📉Viaje para torneo fuera de la ciudad"
                        },
                        new
                        {
                            GastoId = 5,
                            AbonadoId = 4,
                            Cantidad = 1500000,
                            GastoNombre = "📉Sueldo de Jugadores"
                        },
                        new
                        {
                            GastoId = 6,
                            AbonadoId = 4,
                            Cantidad = 250000,
                            GastoNombre = "📉Sueldo del Cuerpo Tecnico"
                        },
                        new
                        {
                            GastoId = 7,
                            AbonadoId = 4,
                            Cantidad = 15000,
                            GastoNombre = "📉Sueldo del Entrenador"
                        },
                        new
                        {
                            GastoId = 8,
                            AbonadoId = 4,
                            Cantidad = 1500,
                            GastoNombre = "📉Viaje para torneo fuera de la ciudad"
                        },
                        new
                        {
                            GastoId = 9,
                            AbonadoId = 6,
                            Cantidad = 3000,
                            GastoNombre = "📈Venta de entradas en partidos locales"
                        },
                        new
                        {
                            GastoId = 10,
                            AbonadoId = 1,
                            Cantidad = 1000,
                            GastoNombre = "📉Mantenimiento de equipamiento"
                        },
                        new
                        {
                            GastoId = 11,
                            AbonadoId = 7,
                            Cantidad = 1000,
                            GastoNombre = "📈Donación de un miembro del equipo"
                        },
                        new
                        {
                            GastoId = 12,
                            AbonadoId = 8,
                            Cantidad = 20000,
                            GastoNombre = "📈Subvención del gobierno local"
                        },
                        new
                        {
                            GastoId = 13,
                            AbonadoId = 5,
                            Cantidad = 200,
                            GastoNombre = "📈Venta de productos de merchandising"
                        },
                        new
                        {
                            GastoId = 14,
                            AbonadoId = 5,
                            Cantidad = 20000,
                            GastoNombre = "📈Entradas"
                        },
                        new
                        {
                            GastoId = 15,
                            AbonadoId = 5,
                            Cantidad = 2000000,
                            GastoNombre = "📈Beneficios por campeonatos"
                        });
                });

            modelBuilder.Entity("ProyectoCore10AbrilBack.Models.Jugador", b =>
                {
                    b.Property<int>("JugadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JugadorId"));

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JugadorApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JugadorNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JugadorSueldo")
                        .HasColumnType("int");

                    b.Property<string>("JugadorUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Lesionado")
                        .HasColumnType("int");

                    b.HasKey("JugadorId");

                    b.ToTable("Jugadores");

                    b.HasData(
                        new
                        {
                            JugadorId = 1,
                            ImageUrl = "~/images/5cb68fa1-dac5-4c6e-9faf-a083483d0486.png",
                            JugadorApellido = "Martínez",
                            JugadorNombre = "Luis",
                            JugadorSueldo = 2000,
                            JugadorUser = "LuisJugador",
                            Lesionado = 1
                        },
                        new
                        {
                            JugadorId = 2,
                            ImageUrl = "~/images/02186b80-325e-474c-8282-c3c78f53c685.png",
                            JugadorApellido = "García",
                            JugadorNombre = "Ana",
                            JugadorSueldo = 1800,
                            JugadorUser = "AnaJugador",
                            Lesionado = 0
                        },
                        new
                        {
                            JugadorId = 3,
                            ImageUrl = "~/images/0114cc3f-4c78-4a63-b651-cfad67481440.png",
                            JugadorApellido = "Gómez",
                            JugadorNombre = "Pedro",
                            JugadorSueldo = 1800,
                            JugadorUser = "PedroJugador",
                            Lesionado = 0
                        },
                        new
                        {
                            JugadorId = 4,
                            ImageUrl = "~/images/432fdf64-3cd4-4f91-8fdd-f97f2592d635.png",
                            JugadorApellido = "Hernández",
                            JugadorNombre = "Sara",
                            JugadorSueldo = 2200,
                            JugadorUser = "SaraJugador",
                            Lesionado = 1
                        },
                        new
                        {
                            JugadorId = 5,
                            ImageUrl = "~/images/84e8ff71-7868-439b-8511-817099d5b2a8.png",
                            JugadorApellido = "Díaz",
                            JugadorNombre = "Carlos",
                            JugadorSueldo = 1900,
                            JugadorUser = "CarlosJugador",
                            Lesionado = 0
                        },
                        new
                        {
                            JugadorId = 6,
                            ImageUrl = "~/images/62b27d3e-a213-441b-8d32-d39c1ba6730f.png",
                            JugadorApellido = "Rodríguez",
                            JugadorNombre = "Elena",
                            JugadorSueldo = 2100,
                            JugadorUser = "ElenaJugador",
                            Lesionado = 1
                        },
                        new
                        {
                            JugadorId = 7,
                            ImageUrl = "~/images/8bad9107-56f9-4bf7-972e-5f10b846ea14.png",
                            JugadorApellido = "Fernández",
                            JugadorNombre = "Pablo",
                            JugadorSueldo = 2000,
                            JugadorUser = "PabloJugador",
                            Lesionado = 1
                        },
                        new
                        {
                            JugadorId = 8,
                            ImageUrl = "~/images/8cdf84b3-9750-4e51-bfa4-83d721e693c2.png",
                            JugadorApellido = "Martínez",
                            JugadorNombre = "Laura",
                            JugadorSueldo = 1700,
                            JugadorUser = "LauraJugador",
                            Lesionado = 0
                        },
                        new
                        {
                            JugadorId = 9,
                            ImageUrl = "~/images/_47c9d792-3d98-44d6-b238-5cd41b80f879.png",
                            JugadorApellido = "García",
                            JugadorNombre = "Mario",
                            JugadorSueldo = 2300,
                            JugadorUser = "MarioJugador",
                            Lesionado = 1
                        },
                        new
                        {
                            JugadorId = 10,
                            ImageUrl = "~/images/_9e9e8fa6-62a0-4072-9733-34a985cca372.png",
                            JugadorApellido = "López",
                            JugadorNombre = "Isabel",
                            JugadorSueldo = 2400,
                            JugadorUser = "IsabelJugador",
                            Lesionado = 0
                        },
                        new
                        {
                            JugadorId = 11,
                            ImageUrl = "~/images/_e259c736-c326-4505-a76b-3c85a7d212b1.png",
                            JugadorApellido = "Hernández",
                            JugadorNombre = "Juan",
                            JugadorSueldo = 1950,
                            JugadorUser = "JuanJugador",
                            Lesionado = 1
                        },
                        new
                        {
                            JugadorId = 12,
                            ImageUrl = "~/images/_cf6e421e-914e-4e1b-b72c-1681a0efa2eb.png",
                            JugadorApellido = "Gómez",
                            JugadorNombre = "Ana",
                            JugadorSueldo = 1800,
                            JugadorUser = "AnaJugador",
                            Lesionado = 0
                        },
                        new
                        {
                            JugadorId = 13,
                            ImageUrl = "~/images/_8dce3c44-ae0b-452b-993f-9707833344e6.png",
                            JugadorApellido = "Martín",
                            JugadorNombre = "Diego",
                            JugadorSueldo = 2200,
                            JugadorUser = "DiegoJugador",
                            Lesionado = 1
                        },
                        new
                        {
                            JugadorId = 14,
                            ImageUrl = "~/images/_2b9d4c45-429f-4217-b2da-028950e11336.png",
                            JugadorApellido = "Jiménez",
                            JugadorNombre = "Eva",
                            JugadorSueldo = 2100,
                            JugadorUser = "EvaJugador",
                            Lesionado = 0
                        },
                        new
                        {
                            JugadorId = 15,
                            ImageUrl = "~/images/_1bf715e4-8285-4dde-a2b9-90bad0e56d4d.png",
                            JugadorApellido = "Sánchez",
                            JugadorNombre = "José",
                            JugadorSueldo = 1900,
                            JugadorUser = "JoseJugador",
                            Lesionado = 1
                        },
                        new
                        {
                            JugadorId = 16,
                            ImageUrl = "~/images/_a3f5eaa5-c392-45aa-a698-33fbac33c2e5.png",
                            JugadorApellido = "Pérez",
                            JugadorNombre = "María",
                            JugadorSueldo = 2000,
                            JugadorUser = "MariaJugador",
                            Lesionado = 0
                        },
                        new
                        {
                            JugadorId = 17,
                            ImageUrl = "~/images/_5c75b6f6-efff-4662-9064-118b2e35dd7d.png",
                            JugadorApellido = "Gutiérrez",
                            JugadorNombre = "Manuel",
                            JugadorSueldo = 1850,
                            JugadorUser = "ManuelJugador",
                            Lesionado = 1
                        },
                        new
                        {
                            JugadorId = 18,
                            ImageUrl = "~/images/_89ec388f-428a-4210-87b1-bbd4578b6103.png",
                            JugadorApellido = "Martínez",
                            JugadorNombre = "Carmen",
                            JugadorSueldo = 2050,
                            JugadorUser = "CarmenJugador",
                            Lesionado = 0
                        },
                        new
                        {
                            JugadorId = 19,
                            ImageUrl = "~/images/_2fc03db0-492e-48d1-9541-4bb0fd806a89.png",
                            JugadorApellido = "González",
                            JugadorNombre = "Daniel",
                            JugadorSueldo = 1950,
                            JugadorUser = "DanielJugador",
                            Lesionado = 1
                        },
                        new
                        {
                            JugadorId = 20,
                            ImageUrl = "~/images/_833d50b0-3d0b-4b92-9303-9a4788fb19c0.png",
                            JugadorApellido = "Hernández",
                            JugadorNombre = "Lorena",
                            JugadorSueldo = 2200,
                            JugadorUser = "LorenaJugador",
                            Lesionado = 0
                        },
                        new
                        {
                            JugadorId = 21,
                            ImageUrl = "~/images/_0c1bd7ea-e87d-4fb1-b9e8-3a11f99ad1b2.png",
                            JugadorApellido = "Fernández",
                            JugadorNombre = "Adrián",
                            JugadorSueldo = 2000,
                            JugadorUser = "AdrianJugador",
                            Lesionado = 1
                        },
                        new
                        {
                            JugadorId = 22,
                            ImageUrl = "~/images/_73db2531-d93e-45f9-8c30-6114e8aceea4.png",
                            JugadorApellido = "Gómez",
                            JugadorNombre = "Marta",
                            JugadorSueldo = 2100,
                            JugadorUser = "MartaJugador",
                            Lesionado = 0
                        });
                });

            modelBuilder.Entity("ProyectoCore10AbrilBack.Models.Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoId"));

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductoPrecio")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductoId");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            ProductoId = 1,
                            ImageUrl = "~/images/balon.jpg",
                            ProductoNombre = "Balón de fútbol",
                            ProductoPrecio = "20"
                        },
                        new
                        {
                            ProductoId = 2,
                            ImageUrl = "~/images/conos.jpg",
                            ProductoNombre = "Conos de entrenamiento",
                            ProductoPrecio = "10"
                        },
                        new
                        {
                            ProductoId = 3,
                            ImageUrl = "~/images/red.jpg",
                            ProductoNombre = "Red de fútbol",
                            ProductoPrecio = "50"
                        },
                        new
                        {
                            ProductoId = 4,
                            ImageUrl = "~/images/botella.jpg",
                            ProductoNombre = "Botella de agua",
                            ProductoPrecio = "5"
                        },
                        new
                        {
                            ProductoId = 5,
                            ImageUrl = "~/images/Conjunto_de_pesas.jpg",
                            ProductoNombre = "Conjunto de pesas",
                            ProductoPrecio = "30"
                        },
                        new
                        {
                            ProductoId = 6,
                            ImageUrl = "~/images/guantes.jpg",
                            ProductoNombre = "Guantes de portero",
                            ProductoPrecio = "15"
                        },
                        new
                        {
                            ProductoId = 7,
                            ImageUrl = "~/images/Camisa5.PNG",
                            ProductoNombre = "Camiseta deportiva",
                            ProductoPrecio = "25"
                        },
                        new
                        {
                            ProductoId = 8,
                            ImageUrl = "~/images/deportivas.jpg",
                            ProductoNombre = "Zapatillas de fútbol",
                            ProductoPrecio = "40"
                        },
                        new
                        {
                            ProductoId = 9,
                            ImageUrl = "~/images/baloncesto.jpg",
                            ProductoNombre = "Balón de baloncesto",
                            ProductoPrecio = "30"
                        },
                        new
                        {
                            ProductoId = 10,
                            ImageUrl = "~/images/Camisa1.PNG",
                            ProductoNombre = "Camiseta Titular",
                            ProductoPrecio = "50"
                        },
                        new
                        {
                            ProductoId = 11,
                            ImageUrl = "~/images/Camisa3.PNG",
                            ProductoNombre = "Camiseta Visitante",
                            ProductoPrecio = "45"
                        },
                        new
                        {
                            ProductoId = 12,
                            ImageUrl = "~/images/retro.jpg",
                            ProductoNombre = "Sudadera Retro",
                            ProductoPrecio = "50"
                        },
                        new
                        {
                            ProductoId = 13,
                            ImageUrl = "~/images/invitado.jpg",
                            ProductoNombre = "Sudadera Visitante",
                            ProductoPrecio = "47"
                        },
                        new
                        {
                            ProductoId = 14,
                            ImageUrl = "~/images/indumentariaprepartidooscuravisi.jpg",
                            ProductoNombre = "Camiseta entreno",
                            ProductoPrecio = "35"
                        },
                        new
                        {
                            ProductoId = 15,
                            ImageUrl = "~/images/calentar.jpg",
                            ProductoNombre = "Indumentaria Calentamiento",
                            ProductoPrecio = "55"
                        },
                        new
                        {
                            ProductoId = 16,
                            ImageUrl = "~/images/camisetaentrenonegra.jpg",
                            ProductoNombre = "Cuerda para saltar",
                            ProductoPrecio = "10"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProyectoCore10AbrilBack.Models.Categoria", b =>
                {
                    b.HasOne("ProyectoCore10AbrilBack.Models.Jugador", "Jugador")
                        .WithMany()
                        .HasForeignKey("JugadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jugador");
                });

            modelBuilder.Entity("ProyectoCore10AbrilBack.Models.CuerpoTecnico", b =>
                {
                    b.HasOne("ProyectoCore10AbrilBack.Models.Jugador", "Jugador")
                        .WithMany()
                        .HasForeignKey("JugadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jugador");
                });

            modelBuilder.Entity("ProyectoCore10AbrilBack.Models.Gasto", b =>
                {
                    b.HasOne("ProyectoCore10AbrilBack.Models.Abonado", "Abonado")
                        .WithMany()
                        .HasForeignKey("AbonadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoCore10AbrilBack.Models.CuerpoTecnico", "CuerpoTecnico")
                        .WithMany()
                        .HasForeignKey("CuerpoTecnicoId");

                    b.HasOne("ProyectoCore10AbrilBack.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId");

                    b.Navigation("Abonado");

                    b.Navigation("CuerpoTecnico");

                    b.Navigation("Producto");
                });
#pragma warning restore 612, 618
        }
    }
}
